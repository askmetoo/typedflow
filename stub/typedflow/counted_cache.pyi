from typedflow.types import H, T
from typing import Any, Dict

class CacheItem:
    count: int
    value: T
    def __init__(self, count: Any, value: Any) -> None: ...

class CacheTable:
    life: int
    cache_table: Dict[H, CacheItem[T]] = ...
    def get(self, key: H) -> T: ...
    def set(self, key: H, value: T) -> None: ...
    def __len__(self) -> int: ...
    def __init__(self, life: Any, cache_table: Any) -> None: ...
